# Comprehensive test of the new hybrid import system

# Test 1: Traditional module import (backward compatibility)
import std
show "=== Test 1: Traditional Import ==="
std.write_file("traditional.txt", "Hello from traditional import")
let content1 be std.read_file("traditional.txt")
show "Traditional import result: " + content1

# Test 2: Specific function imports
import std { write_file, read_file }
show "\n=== Test 2: Specific Function Imports ==="
write_file("specific.txt", "Hello from specific imports")
let content2 be read_file("specific.txt")
show "Specific import result: " + content2

# Test 3: Module aliasing
import std as stdlib
show "\n=== Test 3: Module Aliasing ==="
stdlib.write_file("aliased.txt", "Hello from aliased module")
let content3 be stdlib.read_file("aliased.txt")
show "Module alias result: " + content3

# Test 4: Function aliasing
import std { write_file as wf, read_file as rf }
show "\n=== Test 4: Function Aliasing ==="
wf("func_alias.txt", "Hello from function aliases")
let content4 be rf("func_alias.txt")
show "Function alias result: " + content4

show "\n=== All Import Tests Completed Successfully! ==="